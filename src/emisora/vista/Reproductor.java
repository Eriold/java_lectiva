/*
    Código principal, donde se encuentra el desarrollo del reproductor, cuenta con
    play
    stop
    pause
    animación de layer tiempo (incompleta)
    

    Referencias
Proyecto reproductor
https://www.taringa.net/posts/hazlo-tu-mismo/16273871/Reproductor-mp3-java-con-ecualizador-balance-y-listas.html
https://www.taringa.net/posts/hazlo-tu-mismo/16312913/Usar-JProgressBar-como-Slider-Java.html
https://examples.javacodegeeks.com/desktop-java/swing/java-swing-slider-example/

edición y consulta
https://stackoverflow.com/questions/7317455/converting-calendar-date-to-string
https://stackoverflow.com/questions/5301226/convert-string-to-calendar-object-in-java

Metodologías de funciones
https://www.sitepoint.com/java-8-streams-filter-map-reduce/

Librerías por estudiar
https://docs.oracle.com/javase/tutorial/uiswing/events/actionlistener.html

librerías implementadas:
    basicplayer, commons-loggin, jcalendar, [jl01, jogg, jorbis, jspeex, mp3spi1, tritonus, vorbisspi]
    https://github.com/echocat/jogg
*/

package emisora.vista;

import emisora.AnimatorApplicationTimer;
import emisora.BotonesReproducir;
import java.awt.Container;
import java.awt.event.*;
import java.io.File; 
import java.util.logging.*;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.SourceDataLine;
import javax.swing.JFileChooser; 
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javazoom.jlgui.basicplayer.*;

public class Reproductor extends javax.swing.JFrame implements ActionListener{
    
    BotonesReproducir miPlay = new BotonesReproducir();
    JFileChooser fileChooser = new JFileChooser(); 
    File file;
    boolean running = false;
    SourceDataLine line = null;
    AudioInputStream audioInputStream = null;
    Timer timer;
    int value;
    double hora,min,seg;
    

    public Reproductor() {
         initComponents();
         lblActualTiempo.setText("0:0:0"); 
         lblTotalTiempo.setText("0:0:0");
         seg=0;
         
         //--------------------------------------------------

        //Set up a timer that calls this object's action handler.
        timer = new Timer((int) miPlay.getTiempo(), this);
        timer.setInitialDelay(0);
        timer.setCoalesce(true);       
        
    
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblBotonFavorito = new javax.swing.JLabel();
        lblBotonAgregar = new javax.swing.JLabel();
        lblBtonBuscar = new javax.swing.JLabel();
        lblBotonEdtarUsuario = new javax.swing.JLabel();
        lblBotonDesconectar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jltListaReproduccion = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        lblBotonAtras = new javax.swing.JLabel();
        lblBotonPlay = new javax.swing.JLabel();
        lblBotonSiguiente = new javax.swing.JLabel();
        slrProgreso = new javax.swing.JSlider();
        lblBotonPausa = new javax.swing.JLabel();
        lblBotonParar = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblActualTiempo = new javax.swing.JLabel();
        lblTotalTiempo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reproductor");

        jPanel1.setBackground(new java.awt.Color(55, 55, 55));

        jPanel2.setBackground(new java.awt.Color(63, 62, 62));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Canción en Reproducción");

        lblBotonFavorito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/favorito.png"))); // NOI18N

        lblBotonAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/agregar.png"))); // NOI18N
        lblBotonAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonAgregarMouseClicked(evt);
            }
        });

        lblBtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/buscar.png"))); // NOI18N
        lblBtonBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBtonBuscarMouseClicked(evt);
            }
        });

        lblBotonEdtarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/editarusuario.png"))); // NOI18N
        lblBotonEdtarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonEdtarUsuarioMouseClicked(evt);
            }
        });

        lblBotonDesconectar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/desconectar.png"))); // NOI18N
        lblBotonDesconectar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonDesconectarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBotonEdtarUsuario)
                .addGap(18, 18, 18)
                .addComponent(lblBotonAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblBotonFavorito)
                .addGap(18, 18, 18)
                .addComponent(lblBtonBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblBotonDesconectar)
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBotonDesconectar)
                    .addComponent(lblBotonEdtarUsuario)
                    .addComponent(lblBtonBuscar)
                    .addComponent(lblBotonAgregar)
                    .addComponent(lblBotonFavorito))
                .addGap(26, 26, 26))
        );

        jltListaReproduccion.setBackground(new java.awt.Color(46, 46, 46));
        jltListaReproduccion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jltListaReproduccion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jltListaReproduccion.setForeground(new java.awt.Color(204, 204, 204));
        jltListaReproduccion.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Canción 1", "Canción 2", "Canción 3", "Canción 4", "Canción 5", "Canción 6", "Canción 7" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jltListaReproduccion);

        jPanel3.setBackground(new java.awt.Color(46, 46, 46));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblBotonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/atras.png"))); // NOI18N

        lblBotonPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/reproducir.png"))); // NOI18N
        lblBotonPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonPlayMouseClicked(evt);
            }
        });

        lblBotonSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/siguiente.png"))); // NOI18N

        slrProgreso.setBackground(new java.awt.Color(46, 46, 46));
        slrProgreso.setValue(0);

        lblBotonPausa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/pausa.png"))); // NOI18N
        lblBotonPausa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonPausaMouseClicked(evt);
            }
        });

        lblBotonParar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emisora/image/parar.png"))); // NOI18N
        lblBotonParar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonPararMouseClicked(evt);
            }
        });

        lblEstado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEstado.setForeground(new java.awt.Color(255, 255, 255));
        lblEstado.setText("Pausa");

        lblActualTiempo.setForeground(new java.awt.Color(255, 255, 255));
        lblActualTiempo.setText("0");

        lblTotalTiempo.setForeground(new java.awt.Color(255, 255, 255));
        lblTotalTiempo.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblEstado)
                .addGap(143, 143, 143))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblActualTiempo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(slrProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblBotonAtras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblBotonParar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblBotonPlay)
                        .addGap(14, 14, 14)
                        .addComponent(lblBotonPausa)
                        .addGap(4, 4, 4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalTiempo)
                    .addComponent(lblBotonSiguiente))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEstado)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(slrProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblActualTiempo)
                    .addComponent(lblTotalTiempo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblBotonSiguiente)
                    .addComponent(lblBotonPlay)
                    .addComponent(lblBotonAtras)
                    .addComponent(lblBotonPausa)
                    .addComponent(lblBotonParar))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Método que nos da una confirmación si realmente queremos salir de la app
    private void lblBotonDesconectarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonDesconectarMouseClicked
        int opcion = JOptionPane.showConfirmDialog(null, "Estás a punto de cerrar la ventana \n  ¿Estás seguro de salir?",
                                                        "Advertencia",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        if (opcion == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_lblBotonDesconectarMouseClicked
       
    //Queda pendiente corregir la animación de este evento, declarado en referencia.
    //PENDIENTE
    public void actionPerformed(ActionEvent e) {
        lblActualTiempo.setText(Long.toString((long) (hora))+":"+Long.toString((long) (min))+":"+(Long.toString((long) (seg))));
        
    }
    
    //Método para reducir los microsegundos, hora, minuto,segudo
    public void calcularTiempo(){        
        seg = miPlay.getTiempo()/1000000;
        if (seg>60*(1+min)){            
            min++;            
        }
        if (min>=1){
            seg = seg+(-60*(min));
        }
        if (min>60){
            min = 0;
            hora++;
        }     
        int animador = (int)seg;
        timer = new Timer(animador, this);
        timer.setInitialDelay(0);
        timer.setCoalesce(true);
        lblActualTiempo.setText((Long.toString((long) (hora))+":"+Long.toString((long) (min))+":"+Long.toString((long) (seg))));
        timer.start();
        
    }
    
    //------------------------------------------------
    
    public void startAnimation() {
        if (running) {
            //Do nothing.  The user has requested that we
            //stop changing the image.
        } else {
            //Start (or restart) animating!
            timer.start();
        }
    }


    public void stopAnimation() {
        //Stop the animating thread.
        timer.stop();
    }
    
    //--------------------------------------------------
    
    //Método de botón Play o reproducción
    private void lblBotonPlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonPlayMouseClicked
        try { 
            miPlay.control.play();
            //Le decimos  play al control con el archivo que ya se había abierto             
        } catch (BasicPlayerException ex) { 
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex); 
        }
        //Comprueba si el estado que recibe es Pausa y runing es falso para ponerlo verdadero
        switch (lblEstado.getText()) { 
            case "Pausa" : 
                if (!running&&file!=null) { 
                    try { 
                        miPlay.control.pause(); 
                        lblEstado.setText("Pausa"); 
                        running = true;
                        stopAnimation();
                        
                    } catch (BasicPlayerException ex) { 
                        Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex); 
                    } 
                } 
                //Si running es verdadero, reanuda la reproducción
                 if (running) {
                    //lblActualTiempo.setText(Long.toString((miPlay.getTiempo()/10000)));                     
            try { 
                miPlay.control.resume(); 
                lblEstado.setText("Play");
                //lblActualTiempo.setText(Long.toString((long) (hora))+":"+Long.toString((long) (min))+":"+Long.toString((long) (seg)));
                
                startAnimation();
                calcularTiempo();
                running = false;
                
            } catch (BasicPlayerException ex) { 
                Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex); 
            } 
                        } 
                break; 
                
                //Comprueba si el estado que recibe es "Parado" y lo vuelve a empezar (Play)                
                //[Código abierto con la posibilidad de animar botón "Play" en Play y Pausa]
             case "Parado": 
                try { 
                    miPlay.control.play(); 
                } catch (BasicPlayerException ex) { 
                    Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex); 
                } 
                lblEstado.setText("Play"); 
                break; 
                

        } 
    }//GEN-LAST:event_lblBotonPlayMouseClicked
    //Método para importar música [Código dependiente de Lina]
    private void lblBotonAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonAgregarMouseClicked
    FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo MP3", "mp3", "mp3"); 
        fileChooser.setFileFilter(filtro); 

        int seleccion = fileChooser.showOpenDialog(this); 

        if (seleccion == JFileChooser.APPROVE_OPTION) { 
            file = fileChooser.getSelectedFile(); 
            try { 
                miPlay.control.open(file);
                //Le decimos al control del player que abra el archivo 
            } catch (BasicPlayerException ex) { 
                Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex); 
            } 
        } 
    }//GEN-LAST:event_lblBotonAgregarMouseClicked
    
    //Método para pausar la canción
    private void lblBotonPausaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonPausaMouseClicked
        try {
            miPlay.control.pause();
            
        } catch (BasicPlayerException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        }
        running = false; 
        lblEstado.setText("Pausa"); 
    }//GEN-LAST:event_lblBotonPausaMouseClicked

    //Método que da una pausa definitiva
    private void lblBotonPararMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonPararMouseClicked
        try {
            miPlay.control.stop();
        } catch (BasicPlayerException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        }
        running = false; 
        lblEstado.setText("Parado"); 
        hora =0;
        min = 0;
        seg = 0;
    }//GEN-LAST:event_lblBotonPararMouseClicked

    private void lblBotonEdtarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonEdtarUsuarioMouseClicked
        RegistroUsuario abrir =new RegistroUsuario();
        abrir.setVisible(true);
    }//GEN-LAST:event_lblBotonEdtarUsuarioMouseClicked

    private void lblBtonBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBtonBuscarMouseClicked
        BuscarUsuario abrir = new BuscarUsuario();
        abrir.setVisible(true);
    }//GEN-LAST:event_lblBtonBuscarMouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reproductor().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> jltListaReproduccion;
    private javax.swing.JLabel lblActualTiempo;
    private javax.swing.JLabel lblBotonAgregar;
    private javax.swing.JLabel lblBotonAtras;
    private javax.swing.JLabel lblBotonDesconectar;
    private javax.swing.JLabel lblBotonEdtarUsuario;
    private javax.swing.JLabel lblBotonFavorito;
    private javax.swing.JLabel lblBotonParar;
    private javax.swing.JLabel lblBotonPausa;
    private javax.swing.JLabel lblBotonPlay;
    private javax.swing.JLabel lblBotonSiguiente;
    private javax.swing.JLabel lblBtonBuscar;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblTotalTiempo;
    private javax.swing.JSlider slrProgreso;
    // End of variables declaration//GEN-END:variables
}
